// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id_admin   String   @id @default(uuid())
  username   String   @db.VarChar(50)
  password   String   @db.VarChar(100)
  foto_admin String?  @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("admin")
}

model Agama {
  id_agama   String   @id @default(uuid())
  nama_agama String   @db.VarChar(25)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Siswa      Siswa[]

  @@map("agama")
}

model Kelas {
  id_kelas   String   @id @default(uuid())
  nama_kelas String   @db.VarChar(50)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Siswa      Siswa[]

  @@map("kelas")
}

model Siswa {
  id_siswa      String       @id @default(uuid())
  no_anggota    Int          @db.Integer
  nama_siswa    String       @db.VarChar(50)
  nis           Int          @db.Integer
  nisn          Int          @db.Integer
  tanggal_lahir String       @db.VarChar(50)
  tempat_lahir  String       @db.Text
  jenis_kelamin String       @db.VarChar(15)
  id_agama      String
  agama         Agama        @relation(fields: [id_agama], references: [id_agama])
  alamat        String       @db.Text
  id_kelas      String
  kelas         Kelas        @relation(fields: [id_kelas], references: [id_kelas])
  foto_siswa    String?      @db.Text
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  Peminjaman    Peminjaman[]
  Riwayat       Riwayat[]

  @@map("siswa")
}

model RakBuku {
  id_rak_buku   String   @id @default(uuid())
  nama_rak_buku String   @db.VarChar(50)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Buku          Buku[]

  @@map("rak_buku")
}

model Buku {
  id_buku      String       @id @default(uuid())
  judul_buku   String       @db.VarChar(50)
  pengarang    String       @db.VarChar(50)
  penerbit     String       @db.VarChar(50)
  tahun_terbit Int          @db.Integer
  deskripsi    String       @db.Text
  stok_buku    Int          @db.Integer
  foto_buku    String?      @db.Text
  id_rak_buku  String
  rak_buku     RakBuku      @relation(fields: [id_rak_buku], references: [id_rak_buku])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Peminjaman   Peminjaman[]
  Riwayat      Riwayat[]

  @@map("buku")
}

model Peminjaman {
  id_peminjaman   String   @id @default(uuid())
  id_siswa        String
  siswa           Siswa    @relation(fields: [id_siswa], references: [id_siswa])
  id_buku         String
  buku            Buku     @relation(fields: [id_buku], references: [id_buku])
  denda           Int      @db.Integer
  status          String   @db.VarChar(30)
  tanggal_pinjam  DateTime @default(now()) @db.Date
  tanggal_kembali DateTime @db.Date
  keterlambatan   DateTime @updatedAt
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("peminjaman")
}

model Riwayat {
  id_riwayat      String   @id @default(uuid())
  id_siswa        String
  siswa           Siswa    @relation(fields: [id_siswa], references: [id_siswa])
  id_buku         String
  buku            Buku     @relation(fields: [id_buku], references: [id_buku])
  tanggal_pinjam  DateTime @default(now()) @db.Date
  tanggal_kembali DateTime @db.Date
  status          String   @db.VarChar(25)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("riwayat")
}
